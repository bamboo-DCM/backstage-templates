apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: nestjs-api
  title: NestJS API
  description: Provisions a minimalistic NestJS API application
spec:
  owner: dev-team
  type: service

  parameters:
    - title: Fill in some steps
      required:
        - component_id
        - environment
      properties:
        component_id:
          title: Component name
          type: string
          description: Provide a component (microservice) name
          pattern: '^([a-zA-Z][a-zA-Z0-9]*)(-[a-zA-Z0-9]+)*$'
        description:
          title: Description
          type: string
          description: A short description of the component
        environment:
          title: Environment
          type: string
          description: The environment where this component will be deployed
          enum:
            - development
            - production

  steps:
    - id: create-ecr-repository
      name: Create ECR Repository
      action: aws:ecr:create
      input:
        repositoryName: bamboo-brazil-${{ parameters.environment }}-${{ parameters.component_id }}-ecr
        environment: ${{ parameters.environment }}

    - id: create-coolify-app
      name: Create Coolify Application
      action: coolify:application:create
      input:
        project_uuid: "qsckwcgc0cgkc4s0w0gco8s0"
        server_uuid: "tsoc0go0g4cc44o4wggo80g4"
        environment_name: "production"
        docker_registry_image_name: ${{ steps['create-ecr-repository'].output.repositoryUri }}
        docker_registry_image_tag: "prod"
        ports_exposes: "3000"
        name: ${{ parameters.component_id }}
        description: ${{ parameters.description }}
        domains: https://${{ parameters.component_id }}.bamboodcm.com

    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./template
        values:
          app_name: ${{parameters.component_id}}
          app_env: ${{parameters.environment}}
          app_description: ${{parameters.description}}
          repositoryUri: ${{ steps['create-ecr-repository'].output.repositoryUri }}
          application_uuid: ${{ steps['create-coolify-app'].output.application_uuid }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        description: This is ${{ parameters.component_id }}
        repoUrl: github.com?owner=bamboo-DCM&repo=${{parameters.component_id}}
        protectDefaultBranch: false
        repoVisibility: public

    - id: create-route53-register
      name: Create Route53 Register
      action: aws:route53:create
      input:
        domain: ${{ parameters.component_id }}.bamboodcm.com

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Coolify Application
        url: ${{ steps['create-coolify-app'].output.domain }}
      - title: Coolify Application
        url: ${{ steps['create-coolify-app'].output.application_uuid }}
